// <auto-generated />
using System;
using Fit.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Fit.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200229225250_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Fit.Models.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CityId")
                        .HasColumnType("integer");

                    b.Property<int?>("CountryId")
                        .HasColumnType("integer");

                    b.Property<string>("House")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PostCode")
                        .HasColumnType("text");

                    b.Property<int?>("RegionId")
                        .HasColumnType("integer");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("RegionId");

                    b.ToTable("Buildings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Центральний корпус"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Будівельний корпус"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Гірничий корпус"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Трампарк-корпус"
                        });
                });

            modelBuilder.Entity("Fit.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Київ"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Харків"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Дніпро"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Кривий Ріг"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Львів"
                        });
                });

            modelBuilder.Entity("Fit.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "UA",
                            Name = "Україна"
                        });
                });

            modelBuilder.Entity("Fit.Models.Degree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Degrees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Acronym = "Канд. арх.",
                            Name = "Кандидат архітектури"
                        },
                        new
                        {
                            Id = 2,
                            Acronym = "Канд. біол. наук",
                            Name = "Кандидат біологічних наук"
                        },
                        new
                        {
                            Id = 3,
                            Acronym = "Канд. вет. наук",
                            Name = "Кандидат ветеринарних наук"
                        },
                        new
                        {
                            Id = 4,
                            Acronym = "Канд. військ. наук",
                            Name = "Кандидат військових наук"
                        },
                        new
                        {
                            Id = 5,
                            Acronym = "Канд. географ. наук",
                            Name = "Кандидат географічних наук"
                        },
                        new
                        {
                            Id = 6,
                            Acronym = "Канд. геолог. наук",
                            Name = "Кандидат геологічних наук"
                        },
                        new
                        {
                            Id = 7,
                            Acronym = "Канд. держ. упр.",
                            Name = "Кандидат наук з державного управління"
                        },
                        new
                        {
                            Id = 8,
                            Acronym = "Канд. екон. наук",
                            Name = "Кандидат економічних наук"
                        },
                        new
                        {
                            Id = 9,
                            Acronym = "Канд. іст. наук",
                            Name = "Кандидат історичних наук"
                        },
                        new
                        {
                            Id = 10,
                            Acronym = "Канд. культ.",
                            Name = "Кандидат культурології"
                        },
                        new
                        {
                            Id = 11,
                            Acronym = "Канд. мед. наук",
                            Name = "Кандидат медичних наук"
                        },
                        new
                        {
                            Id = 12,
                            Acronym = "Канд. мист.",
                            Name = "Кандидат мистецтвознавства"
                        },
                        new
                        {
                            Id = 13,
                            Acronym = "Канд. пед. наук",
                            Name = "Кандидат педагогічних наук"
                        },
                        new
                        {
                            Id = 14,
                            Acronym = "Канд. політ. наук",
                            Name = "Кандидат політичних наук"
                        },
                        new
                        {
                            Id = 15,
                            Acronym = "Канд. психол. наук",
                            Name = "Кандидат психологічних наук"
                        },
                        new
                        {
                            Id = 16,
                            Acronym = "Канд. с.-г. наук",
                            Name = "Кандидат сільськогосподарських наук"
                        },
                        new
                        {
                            Id = 17,
                            Acronym = "Канд. соц. ком.",
                            Name = "Кандидат наук із соціальних комунікацій"
                        },
                        new
                        {
                            Id = 18,
                            Acronym = "Канд. соціол. наук",
                            Name = "Кандидат соціологічних наук"
                        },
                        new
                        {
                            Id = 19,
                            Acronym = "Канд. техн. наук",
                            Name = "Кандидат технічних наук"
                        },
                        new
                        {
                            Id = 20,
                            Acronym = "Канд. фіз.-мат. наук",
                            Name = "Кандидат фізико-математичних наук"
                        },
                        new
                        {
                            Id = 21,
                            Acronym = "Канд. фармац. наук",
                            Name = "Кандидат фармацевтичних наук"
                        },
                        new
                        {
                            Id = 22,
                            Acronym = "Канд. фіз. виховання і спорту",
                            Name = "Кандидат наук з фізичного виховання і спорту"
                        },
                        new
                        {
                            Id = 23,
                            Acronym = "Канд. філол. наук",
                            Name = "Кандидат філологічних наук"
                        },
                        new
                        {
                            Id = 24,
                            Acronym = "Канд. філос. наук",
                            Name = "Кандидат філософських наук"
                        },
                        new
                        {
                            Id = 25,
                            Acronym = "Канд. хім. наук",
                            Name = "Кандидат хімічних наук"
                        },
                        new
                        {
                            Id = 26,
                            Acronym = "Канд. юрид. наук",
                            Name = "Кандидат юридичних наук"
                        },
                        new
                        {
                            Id = 27,
                            Acronym = "Д-р арх.",
                            Name = "Доктор архітектури"
                        },
                        new
                        {
                            Id = 28,
                            Acronym = "Д-р біол. наук",
                            Name = "Доктор біологічних наук"
                        },
                        new
                        {
                            Id = 29,
                            Acronym = "Д-р вет. наук",
                            Name = "Доктор ветеринарних наук"
                        },
                        new
                        {
                            Id = 30,
                            Acronym = "Д-р військ. наук",
                            Name = "Доктор військових наук"
                        },
                        new
                        {
                            Id = 31,
                            Acronym = "Д-р географ. наук",
                            Name = "Доктор географічних наук"
                        },
                        new
                        {
                            Id = 32,
                            Acronym = "Д-р геолог. наук",
                            Name = "Доктор геологічних наук"
                        },
                        new
                        {
                            Id = 33,
                            Acronym = "Д-р держ. упр.",
                            Name = "Доктор наук з державного управління"
                        },
                        new
                        {
                            Id = 34,
                            Acronym = "Д-р екон. наук",
                            Name = "Доктор економічних наук"
                        },
                        new
                        {
                            Id = 35,
                            Acronym = "Д-р іст. наук",
                            Name = "Доктор історичних наук"
                        },
                        new
                        {
                            Id = 36,
                            Acronym = "Д-р культ.",
                            Name = "Доктор культурології"
                        },
                        new
                        {
                            Id = 37,
                            Acronym = "Д-р мед. наук",
                            Name = "Доктор медичних наук"
                        },
                        new
                        {
                            Id = 38,
                            Acronym = "Д-р мист.",
                            Name = "Доктор мистецтвознавства"
                        },
                        new
                        {
                            Id = 39,
                            Acronym = "Д-р пед. наук",
                            Name = "Доктор педагогічних наук"
                        },
                        new
                        {
                            Id = 40,
                            Acronym = "Д-р політ. наук",
                            Name = "Доктор політичних наук"
                        },
                        new
                        {
                            Id = 41,
                            Acronym = "Д-р психол. наук",
                            Name = "Доктор психологічних наук"
                        },
                        new
                        {
                            Id = 42,
                            Acronym = "Д-р с.-г. наук",
                            Name = "Доктор сільськогосподарських наук"
                        },
                        new
                        {
                            Id = 43,
                            Acronym = "Д-р соц. ком.",
                            Name = "Доктор наук із соціальних комунікацій"
                        },
                        new
                        {
                            Id = 44,
                            Acronym = "Д-р соціол. наук",
                            Name = "Доктор соціологічних наук"
                        },
                        new
                        {
                            Id = 45,
                            Acronym = "Д-р техн. наук",
                            Name = "Доктор технічних наук"
                        },
                        new
                        {
                            Id = 46,
                            Acronym = "Д-р фіз.-мат. наук",
                            Name = "Доктор фізико-математичних наук"
                        },
                        new
                        {
                            Id = 47,
                            Acronym = "Д-р фармац. наук",
                            Name = "Доктор фармацевтичних наук"
                        },
                        new
                        {
                            Id = 48,
                            Acronym = "Д-р фіз. виховання і спорту",
                            Name = "Доктор наук з фізичного виховання і спорту"
                        },
                        new
                        {
                            Id = 49,
                            Acronym = "Д-р філол. наук",
                            Name = "Доктор філологічних наук"
                        },
                        new
                        {
                            Id = 50,
                            Acronym = "Д-р філос. наук",
                            Name = "Доктор філософських наук"
                        },
                        new
                        {
                            Id = 51,
                            Acronym = "Д-р хім. наук",
                            Name = "Доктор хімічних наук"
                        },
                        new
                        {
                            Id = 52,
                            Acronym = "Д-р юрид. наук",
                            Name = "Доктор юридичних наук"
                        });
                });

            modelBuilder.Entity("Fit.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("integer");

                    b.Property<string>("Logo")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Acronym = "Кафедра ПЦМБ",
                            FacultyId = 1,
                            Name = "Кафедра промислового, цивільного і міського будівництва"
                        },
                        new
                        {
                            Id = 2,
                            Acronym = "Кафедра ТБВМВ",
                            FacultyId = 1,
                            Name = "Кафедра технології будівельних виробів, матеріалів та конструкцій"
                        },
                        new
                        {
                            Id = 3,
                            Acronym = "Кафедра ТВВ",
                            FacultyId = 1,
                            Name = "Кафедра теплогазoводопостачання, водовідведення і вентиляції"
                        },
                        new
                        {
                            Id = 4,
                            Acronym = "Кафедра ГПМ",
                            FacultyId = 2,
                            Name = "Кафедра геології і прикладної мінералогії"
                        },
                        new
                        {
                            Id = 5,
                            Acronym = "Кафедра екол.",
                            FacultyId = 2,
                            Name = "Кафедра екології"
                        },
                        new
                        {
                            Id = 6,
                            Acronym = "Кафедра геодез.",
                            FacultyId = 2,
                            Name = "Кафедра геодезії"
                        },
                        new
                        {
                            Id = 7,
                            Acronym = "Кафедра ПРРКК",
                            FacultyId = 3,
                            Name = "Кафедра підземної розробки родовищ корисних копалин"
                        },
                        new
                        {
                            Id = 8,
                            Acronym = "Кафедра ВГР",
                            FacultyId = 3,
                            Name = "Кафедра відкритих гірничих робіт"
                        },
                        new
                        {
                            Id = 9,
                            Acronym = "Кафедра маркшейдерії",
                            FacultyId = 3,
                            Name = "Кафедра маркшейдерії"
                        },
                        new
                        {
                            Id = 10,
                            Acronym = "Кафедра ОПЦБ",
                            FacultyId = 3,
                            Name = "Кафедра охорони праці та цивільної безпеки"
                        },
                        new
                        {
                            Id = 11,
                            Acronym = "Кафедра БГ",
                            FacultyId = 3,
                            Name = "Кафедра будівельних геотехнологій"
                        },
                        new
                        {
                            Id = 12,
                            Acronym = "Кафедра ЗККХ",
                            FacultyId = 3,
                            Name = "Кафедра збагачення корисних копалин і хімії"
                        },
                        new
                        {
                            Id = 13,
                            Acronym = "Кафедра МЧМЛВ",
                            FacultyId = 3,
                            Name = "Кафедра металургії чорних металів і ливарного виробництва"
                        },
                        new
                        {
                            Id = 14,
                            Acronym = "Кафедра АЕСПТ",
                            FacultyId = 4,
                            Name = "Кафедра автоматизованих електромеханічних систем в промисловості та транспорті"
                        },
                        new
                        {
                            Id = 15,
                            Acronym = "Кафедра ЕЕМ",
                            FacultyId = 4,
                            Name = "Кафедра електропостачання та енергетичного менеджменту"
                        },
                        new
                        {
                            Id = 16,
                            Acronym = "Кафедра ЕМ",
                            FacultyId = 4,
                            Name = "Кафедра електромеханіки"
                        },
                        new
                        {
                            Id = 17,
                            Acronym = "Кафедра ТЕ",
                            FacultyId = 4,
                            Name = "Кафедра теплоенергетики"
                        },
                        new
                        {
                            Id = 18,
                            Acronym = "Кафедра фізики",
                            FacultyId = 4,
                            Name = "Кафедра фізики"
                        },
                        new
                        {
                            Id = 19,
                            Acronym = "Кафедра ПМЗД",
                            FacultyId = 5,
                            Name = "Кафедра прикладної механіки та загальноінженерних дисциплін"
                        },
                        new
                        {
                            Id = 20,
                            Acronym = "Кафедра ТМ",
                            FacultyId = 5,
                            Name = "Кафедра технології машинобудування"
                        },
                        new
                        {
                            Id = 21,
                            Acronym = "Кафедра ГМО",
                            FacultyId = 5,
                            Name = "Кафедра гірничих машин та обладнання"
                        },
                        new
                        {
                            Id = 22,
                            Acronym = "Кафедра АТ",
                            FacultyId = 6,
                            Name = "Кафедра автомобільного транспорту"
                        },
                        new
                        {
                            Id = 23,
                            Acronym = "Кафедра ВМ",
                            FacultyId = 6,
                            Name = "Кафедра вищої математики"
                        },
                        new
                        {
                            Id = 24,
                            Acronym = "Кафедра ФСН",
                            FacultyId = 6,
                            Name = "Кафедра філософії і соціальних наук"
                        },
                        new
                        {
                            Id = 25,
                            Acronym = "Кафедра ФВ",
                            FacultyId = 6,
                            Name = "Кафедра фізичного виховання"
                        },
                        new
                        {
                            Id = 26,
                            Acronym = "Кафедра ФСГІР",
                            FacultyId = 7,
                            Name = "Кафедра фінансів суб’єктів господарювання та інноваційного розвитку"
                        },
                        new
                        {
                            Id = 27,
                            Acronym = "Кафедра ООПУА",
                            FacultyId = 7,
                            Name = "Кафедра обліку, оподаткування, публічного управління та адміністрування"
                        },
                        new
                        {
                            Id = 28,
                            Acronym = "Кафедра ЕОУП",
                            FacultyId = 7,
                            Name = "Кафедра економіки, організації та управління підприємствами"
                        },
                        new
                        {
                            Id = 29,
                            Acronym = "Кафедра МіА",
                            FacultyId = 7,
                            Name = "Кафедра менеджменту і адміністрування"
                        },
                        new
                        {
                            Id = 30,
                            Acronym = "Кафедра права",
                            FacultyId = 7,
                            Name = "Кафедра права"
                        },
                        new
                        {
                            Id = 31,
                            Acronym = "Кафедра АКНТ",
                            Email = "aknt@knu.edu.ua",
                            FacultyId = 8,
                            Logo = "aknt.svg",
                            Name = "Кафедра автоматизації, комп’ютерних наук і технологій",
                            Phone = "+380564090635",
                            Url = "aknt.knu.edu.ua"
                        },
                        new
                        {
                            Id = 32,
                            Acronym = "Кафедра МПЗ",
                            Email = "mpz@knu.edu.ua",
                            FacultyId = 8,
                            Logo = "mpz.svg",
                            Name = "Кафедра моделювання і програмного забезпечення",
                            Phone = "+380564090605",
                            Url = "mpz.knu.edu.ua"
                        },
                        new
                        {
                            Id = 33,
                            Acronym = "Кафедра КСМ",
                            Email = "ksm@knu.edu.ua",
                            FacultyId = 8,
                            Logo = "ksm.svg",
                            Name = "Кафедра комп’ютерних систем та мереж",
                            Phone = "+380564091720",
                            Url = "ksm.knu.edu.ua"
                        },
                        new
                        {
                            Id = 34,
                            Acronym = "Кафедра ІПМП",
                            Email = "ipmp@knu.edu.ua",
                            FacultyId = 8,
                            Logo = "ipmp.svg",
                            Name = "Кафедра інженерної педагогіки та мовної підготовки",
                            Phone = "+380564090607",
                            Url = "ipmp.knu.edu.ua"
                        },
                        new
                        {
                            Id = 35,
                            Acronym = "Кафедра ІМ",
                            Email = "im@knu.edu.ua",
                            FacultyId = 8,
                            Logo = "im.svg",
                            Name = "Кафедра іноземних мов",
                            Phone = "+380564090649",
                            Url = "im.knu.edu.ua"
                        });
                });

            modelBuilder.Entity("Fit.Models.Discipline", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("NameEn")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("Fit.Models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Faculties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Acronym = "БФ",
                            Name = "Будівельний факультет"
                        },
                        new
                        {
                            Id = 2,
                            Acronym = "ГЕФ",
                            Name = "Геолого-екологічний факультет"
                        },
                        new
                        {
                            Id = 3,
                            Acronym = "ГМФ",
                            Name = "Гірничо-металургійний факультет"
                        },
                        new
                        {
                            Id = 4,
                            Acronym = "ЕТФ",
                            Name = "Електротехнічний факультет"
                        },
                        new
                        {
                            Id = 5,
                            Acronym = "ММФ",
                            Name = "Механіко-машинобудівний факультет"
                        },
                        new
                        {
                            Id = 6,
                            Acronym = "ТФ",
                            Name = "Транспортний факультет"
                        },
                        new
                        {
                            Id = 7,
                            Acronym = "ФЕУБ",
                            Name = "Факультет економіки та управління бізнесом"
                        },
                        new
                        {
                            Id = 8,
                            Acronym = "ФІТФ",
                            Name = "Факультет інформаційних технологій"
                        });
                });

            modelBuilder.Entity("Fit.Models.Funding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Fundings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Acronym = "Б",
                            Name = "Бюджет"
                        },
                        new
                        {
                            Id = 2,
                            Acronym = "К",
                            Name = "Контракт"
                        });
                });

            modelBuilder.Entity("Fit.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("FacultyId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "АКІТ-16"
                        },
                        new
                        {
                            Id = 2,
                            Name = "АКІТ-17"
                        },
                        new
                        {
                            Id = 3,
                            Name = "АКІТ-18"
                        },
                        new
                        {
                            Id = 4,
                            Name = "АКІТ-18м"
                        },
                        new
                        {
                            Id = 5,
                            Name = "АКІТ-18м-прх"
                        },
                        new
                        {
                            Id = 6,
                            Name = "АКІТ-18ск"
                        },
                        new
                        {
                            Id = 7,
                            Name = "АКІТ-19"
                        },
                        new
                        {
                            Id = 8,
                            Name = "АКІТ-19м"
                        },
                        new
                        {
                            Id = 9,
                            Name = "АКІТ-19м-прх"
                        },
                        new
                        {
                            Id = 10,
                            Name = "АКІТ-19ск"
                        },
                        new
                        {
                            Id = 11,
                            Name = "ЗАКІТ-16"
                        },
                        new
                        {
                            Id = 12,
                            Name = "ЗАКІТ-17"
                        },
                        new
                        {
                            Id = 13,
                            Name = "ЗАКІТ-18"
                        },
                        new
                        {
                            Id = 14,
                            Name = "ЗАКІТ-18м"
                        },
                        new
                        {
                            Id = 15,
                            Name = "ЗАКІТ-18м-прх"
                        },
                        new
                        {
                            Id = 16,
                            Name = "ЗАКІТ-19"
                        },
                        new
                        {
                            Id = 17,
                            Name = "ЗАКІТ-19м"
                        },
                        new
                        {
                            Id = 18,
                            Name = "ЗАКІТ-19м-прх"
                        },
                        new
                        {
                            Id = 19,
                            Name = "ЗАКІТ-19ск"
                        },
                        new
                        {
                            Id = 20,
                            Name = "ЗІПЗ-16"
                        },
                        new
                        {
                            Id = 21,
                            Name = "ЗІПЗ-17"
                        },
                        new
                        {
                            Id = 22,
                            Name = "ЗІПЗ-18"
                        },
                        new
                        {
                            Id = 23,
                            Name = "ЗІПЗ-18м"
                        },
                        new
                        {
                            Id = 24,
                            Name = "ЗІПЗ-18м-прх"
                        },
                        new
                        {
                            Id = 25,
                            Name = "ЗІПЗ-19"
                        },
                        new
                        {
                            Id = 26,
                            Name = "ЗІПЗ-19м"
                        },
                        new
                        {
                            Id = 27,
                            Name = "ЗІПЗ-19м-прх"
                        },
                        new
                        {
                            Id = 28,
                            Name = "ЗКІ-16"
                        },
                        new
                        {
                            Id = 29,
                            Name = "ЗКІ-17"
                        },
                        new
                        {
                            Id = 30,
                            Name = "ЗКІ-18м"
                        },
                        new
                        {
                            Id = 31,
                            Name = "ЗКІ-19"
                        },
                        new
                        {
                            Id = 32,
                            Name = "ЗКІ-19м"
                        },
                        new
                        {
                            Id = 33,
                            Name = "ЗКН-18"
                        },
                        new
                        {
                            Id = 34,
                            Name = "ЗКН-19"
                        },
                        new
                        {
                            Id = 35,
                            Name = "ЗКН-19м"
                        },
                        new
                        {
                            Id = 36,
                            Name = "ЗПО-19"
                        },
                        new
                        {
                            Id = 37,
                            Name = "ЗПОЕЕ-16"
                        },
                        new
                        {
                            Id = 38,
                            Name = "ЗПОКТ-16"
                        },
                        new
                        {
                            Id = 39,
                            Name = "ЗПОКТ-17"
                        },
                        new
                        {
                            Id = 40,
                            Name = "ЗПОКТ-18"
                        },
                        new
                        {
                            Id = 41,
                            Name = "ЗПОКТ-18м-прх"
                        },
                        new
                        {
                            Id = 42,
                            Name = "ЗПОКТ-19м"
                        },
                        new
                        {
                            Id = 43,
                            Name = "ЗПОКТ-19м-прх"
                        },
                        new
                        {
                            Id = 44,
                            Name = "ІПЗ-16-1"
                        },
                        new
                        {
                            Id = 45,
                            Name = "ІПЗ-16-2"
                        },
                        new
                        {
                            Id = 46,
                            Name = "ІПЗ-17-1"
                        },
                        new
                        {
                            Id = 47,
                            Name = "ІПЗ-17-2"
                        },
                        new
                        {
                            Id = 48,
                            Name = "ІПЗ-17ск"
                        },
                        new
                        {
                            Id = 49,
                            Name = "ІПЗ-18-1"
                        },
                        new
                        {
                            Id = 50,
                            Name = "ІПЗ-18-2"
                        },
                        new
                        {
                            Id = 51,
                            Name = "ІПЗ-18м"
                        },
                        new
                        {
                            Id = 52,
                            Name = "ІПЗ-18ск"
                        },
                        new
                        {
                            Id = 53,
                            Name = "ІПЗ-19-1"
                        },
                        new
                        {
                            Id = 54,
                            Name = "ІПЗ-19-2"
                        },
                        new
                        {
                            Id = 55,
                            Name = "ІПЗ-19м"
                        },
                        new
                        {
                            Id = 56,
                            Name = "ІПЗ-19ск"
                        },
                        new
                        {
                            Id = 57,
                            Name = "КІ-16-1"
                        },
                        new
                        {
                            Id = 58,
                            Name = "КІ-16-2"
                        },
                        new
                        {
                            Id = 59,
                            Name = "КІ-17"
                        },
                        new
                        {
                            Id = 60,
                            Name = "КІ-18"
                        },
                        new
                        {
                            Id = 61,
                            Name = "КІ-18м"
                        },
                        new
                        {
                            Id = 62,
                            Name = "КІ-19"
                        },
                        new
                        {
                            Id = 63,
                            Name = "КІ-19м"
                        },
                        new
                        {
                            Id = 64,
                            Name = "КН-16"
                        },
                        new
                        {
                            Id = 65,
                            Name = "КН-17"
                        },
                        new
                        {
                            Id = 66,
                            Name = "КН-18"
                        },
                        new
                        {
                            Id = 67,
                            Name = "КН-19"
                        },
                        new
                        {
                            Id = 68,
                            Name = "КН-19м"
                        },
                        new
                        {
                            Id = 69,
                            Name = "ПОЕЕ-17"
                        },
                        new
                        {
                            Id = 70,
                            Name = "ПОЕЕ-19"
                        },
                        new
                        {
                            Id = 71,
                            Name = "ПОЕЕ-19ск"
                        },
                        new
                        {
                            Id = 72,
                            Name = "ПОКТ-16"
                        },
                        new
                        {
                            Id = 73,
                            Name = "ПОКТ-17"
                        },
                        new
                        {
                            Id = 74,
                            Name = "ПОКТ-17ск"
                        },
                        new
                        {
                            Id = 75,
                            Name = "ПОКТ-18"
                        },
                        new
                        {
                            Id = 76,
                            Name = "ПОКТ-18м"
                        },
                        new
                        {
                            Id = 77,
                            Name = "ПОКТ-18ск"
                        },
                        new
                        {
                            Id = 78,
                            Name = "ПОКТ-19"
                        },
                        new
                        {
                            Id = 79,
                            Name = "ПОКТ-19м"
                        },
                        new
                        {
                            Id = 80,
                            Name = "ПОКТ-19м-прх"
                        },
                        new
                        {
                            Id = 81,
                            Name = "ПОКТ-19ск"
                        });
                });

            modelBuilder.Entity("Fit.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Acronym = "Асист.",
                            Name = "Асистент"
                        },
                        new
                        {
                            Id = 2,
                            Acronym = "Викл.",
                            Name = "Викладач"
                        },
                        new
                        {
                            Id = 3,
                            Acronym = "Старш. викл.",
                            Name = "Старший викладач"
                        },
                        new
                        {
                            Id = 4,
                            Acronym = "Доц.",
                            Name = "Доцент"
                        },
                        new
                        {
                            Id = 5,
                            Acronym = "Проф.",
                            Name = "Професор"
                        },
                        new
                        {
                            Id = 6,
                            Acronym = "В. о. завкаф.",
                            Name = "В. о. завідувача кафедри"
                        },
                        new
                        {
                            Id = 7,
                            Acronym = "Завкаф.",
                            Name = "Завідувач кафедри"
                        });
                });

            modelBuilder.Entity("Fit.Models.Rank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ranks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Acronym = "Доц.",
                            Name = "Доцент"
                        },
                        new
                        {
                            Id = 2,
                            Acronym = "Проф.",
                            Name = "Професор"
                        },
                        new
                        {
                            Id = 3,
                            Acronym = "Старш. дослідник",
                            Name = "Старший дослідник"
                        });
                });

            modelBuilder.Entity("Fit.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Acronym = "АРК",
                            Name = "Автономна Республіка Крим"
                        },
                        new
                        {
                            Id = 2,
                            Acronym = "Вінницька обл.",
                            Name = "Вінницька область"
                        },
                        new
                        {
                            Id = 3,
                            Acronym = "Волинська обл.",
                            Name = "Волинська область"
                        },
                        new
                        {
                            Id = 4,
                            Acronym = "Дніпропетровська обл.",
                            Name = "Дніпропетровська область"
                        },
                        new
                        {
                            Id = 5,
                            Acronym = "Донецька обл.",
                            Name = "Донецька область"
                        },
                        new
                        {
                            Id = 6,
                            Acronym = "Житомирська обл.",
                            Name = "Житомирська область"
                        },
                        new
                        {
                            Id = 7,
                            Acronym = "Закарпатська обл.",
                            Name = "Закарпатська область"
                        },
                        new
                        {
                            Id = 8,
                            Acronym = "Запорізька обл.",
                            Name = "Запорізька область"
                        },
                        new
                        {
                            Id = 9,
                            Acronym = "Івано-Франківська обл.",
                            Name = "Івано-Франківська область"
                        },
                        new
                        {
                            Id = 10,
                            Acronym = "Київська обл.",
                            Name = "Київська область"
                        },
                        new
                        {
                            Id = 11,
                            Acronym = "Кіровоградська обл.",
                            Name = "Кіровоградська область"
                        },
                        new
                        {
                            Id = 12,
                            Acronym = "Луганська обл.",
                            Name = "Луганська область"
                        },
                        new
                        {
                            Id = 13,
                            Acronym = "Львівська обл.",
                            Name = "Львівська область"
                        },
                        new
                        {
                            Id = 14,
                            Acronym = "Миколаївська обл.",
                            Name = "Миколаївська область"
                        },
                        new
                        {
                            Id = 15,
                            Acronym = "Одеська обл.",
                            Name = "Одеська область"
                        },
                        new
                        {
                            Id = 16,
                            Acronym = "Полтавська обл.",
                            Name = "Полтавська область"
                        },
                        new
                        {
                            Id = 17,
                            Acronym = "Рівненська обл.",
                            Name = "Рівненська область"
                        },
                        new
                        {
                            Id = 18,
                            Acronym = "Сумська обл.",
                            Name = "Сумська область"
                        },
                        new
                        {
                            Id = 19,
                            Acronym = "Тернопільська обл.",
                            Name = "Тернопільська область"
                        },
                        new
                        {
                            Id = 20,
                            Acronym = "Харківська обл.",
                            Name = "Харківська область"
                        },
                        new
                        {
                            Id = 21,
                            Acronym = "Херсонська обл.",
                            Name = "Херсонська область"
                        },
                        new
                        {
                            Id = 22,
                            Acronym = "Хмельницька обл.",
                            Name = "Хмельницька область"
                        },
                        new
                        {
                            Id = 23,
                            Acronym = "Черкаська обл.",
                            Name = "Черкаська область"
                        },
                        new
                        {
                            Id = 24,
                            Acronym = "Чернівецька обл.",
                            Name = "Чернівецька область"
                        },
                        new
                        {
                            Id = 25,
                            Acronym = "Чернігівська обл.",
                            Name = "Чернігівська область"
                        });
                });

            modelBuilder.Entity("Fit.Models.Relative", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Appartment")
                        .HasColumnType("text");

                    b.Property<int?>("CityId")
                        .HasColumnType("integer");

                    b.Property<int?>("CountryId")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("House")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<int?>("RegionId")
                        .HasColumnType("integer");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("RegionId");

                    b.HasIndex("StudentId");

                    b.ToTable("Relatives");
                });

            modelBuilder.Entity("Fit.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("BuildingId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Fit.Models.Specialty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Specialties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "015",
                            Name = "Професійна освіта"
                        },
                        new
                        {
                            Id = 2,
                            Code = "121",
                            Name = "Автоматизація та комп’ютерно-інтегровані технології"
                        },
                        new
                        {
                            Id = 3,
                            Code = "122",
                            Name = "Інженерія програмного забезпечення"
                        },
                        new
                        {
                            Id = 4,
                            Code = "123",
                            Name = "Комп’ютерні науки"
                        },
                        new
                        {
                            Id = 5,
                            Code = "151",
                            Name = "Комп’ютерна інженерія"
                        });
                });

            modelBuilder.Entity("Fit.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("Fit.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Appartment")
                        .HasColumnType("text");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CityId")
                        .HasColumnType("integer");

                    b.Property<int?>("CountryId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("FirstNameEn")
                        .HasColumnType("text");

                    b.Property<int?>("FundingId")
                        .HasColumnType("integer");

                    b.Property<string>("GradeBook")
                        .HasColumnType("text");

                    b.Property<int?>("GroupId")
                        .HasColumnType("integer");

                    b.Property<string>("House")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("LastNameEn")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("MiddleNameEn")
                        .HasColumnType("text");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("text");

                    b.Property<string>("PassportSerial")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Photo")
                        .HasColumnType("text");

                    b.Property<string>("PostCode")
                        .HasColumnType("text");

                    b.Property<int?>("RegionId")
                        .HasColumnType("integer");

                    b.Property<int?>("SpecialtyId")
                        .HasColumnType("integer");

                    b.Property<int?>("StatusId")
                        .HasColumnType("integer");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<int?>("StudyId")
                        .HasColumnType("integer");

                    b.Property<string>("TaxId")
                        .HasColumnType("text");

                    b.Property<string>("Telegram")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("FundingId");

                    b.HasIndex("GroupId");

                    b.HasIndex("RegionId");

                    b.HasIndex("SpecialtyId");

                    b.HasIndex("StatusId");

                    b.HasIndex("StudyId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("17fe8532-0b20-4e33-ac4c-f532ce7fb8aa"),
                            Appartment = "26",
                            Birthday = new DateTime(2000, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CityId = 4,
                            CountryId = 1,
                            Email = "ivanov@gmail.com",
                            FirstName = "Іван",
                            FirstNameEn = "Ivan",
                            FundingId = 1,
                            GradeBook = "123-17",
                            GroupId = 59,
                            House = "15",
                            LastName = "Іванов",
                            LastNameEn = "Ivanov",
                            MiddleName = "Іванович",
                            MiddleNameEn = "Ivanovych",
                            PassportNumber = "012345",
                            PassportSerial = "AA",
                            Phone = "+380961234567",
                            Photo = "default.png",
                            PostCode = "50027",
                            RegionId = 4,
                            SpecialtyId = 1,
                            Street = "Вул. Поштова",
                            StudyId = 1,
                            TaxId = "01234567890",
                            Telegram = "@ivanov"
                        });
                });

            modelBuilder.Entity("Fit.Models.Study", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Studies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Acronym = "Д",
                            Name = "Денна форма"
                        },
                        new
                        {
                            Id = 2,
                            Acronym = "З",
                            Name = "Заочна форма"
                        });
                });

            modelBuilder.Entity("Fit.Models.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Appartment")
                        .HasColumnType("text");

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CityId")
                        .HasColumnType("integer");

                    b.Property<int?>("CountryId")
                        .HasColumnType("integer");

                    b.Property<int?>("DegreeId")
                        .HasColumnType("integer");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("FirstNameEn")
                        .HasColumnType("text");

                    b.Property<string>("House")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("LastNameEn")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("MiddleNameEn")
                        .HasColumnType("text");

                    b.Property<string>("OrcidId")
                        .HasColumnType("text");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("text");

                    b.Property<string>("PassportSerial")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Photo")
                        .HasColumnType("text");

                    b.Property<int?>("PositionId")
                        .HasColumnType("integer");

                    b.Property<string>("PostCode")
                        .HasColumnType("text");

                    b.Property<int?>("RankId")
                        .HasColumnType("integer");

                    b.Property<int?>("RegionId")
                        .HasColumnType("integer");

                    b.Property<string>("ScholarId")
                        .HasColumnType("text");

                    b.Property<string>("ScopusId")
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<string>("TaxId")
                        .HasColumnType("text");

                    b.Property<string>("Telegram")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DegreeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PositionId");

                    b.HasIndex("RankId");

                    b.HasIndex("RegionId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("Fit.Models.Building", b =>
                {
                    b.HasOne("Fit.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("Fit.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Fit.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");
                });

            modelBuilder.Entity("Fit.Models.Department", b =>
                {
                    b.HasOne("Fit.Models.Faculty", "Faculty")
                        .WithMany("Departments")
                        .HasForeignKey("FacultyId");
                });

            modelBuilder.Entity("Fit.Models.Group", b =>
                {
                    b.HasOne("Fit.Models.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId");
                });

            modelBuilder.Entity("Fit.Models.Relative", b =>
                {
                    b.HasOne("Fit.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("Fit.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Fit.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.HasOne("Fit.Models.Student", null)
                        .WithMany("Relatives")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("Fit.Models.Room", b =>
                {
                    b.HasOne("Fit.Models.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingId");
                });

            modelBuilder.Entity("Fit.Models.Student", b =>
                {
                    b.HasOne("Fit.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("Fit.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Fit.Models.Funding", "Funding")
                        .WithMany()
                        .HasForeignKey("FundingId");

                    b.HasOne("Fit.Models.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId");

                    b.HasOne("Fit.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.HasOne("Fit.Models.Specialty", "Specialty")
                        .WithMany()
                        .HasForeignKey("SpecialtyId");

                    b.HasOne("Fit.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("Fit.Models.Study", "Study")
                        .WithMany()
                        .HasForeignKey("StudyId");
                });

            modelBuilder.Entity("Fit.Models.Teacher", b =>
                {
                    b.HasOne("Fit.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("Fit.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Fit.Models.Degree", "Degree")
                        .WithMany()
                        .HasForeignKey("DegreeId");

                    b.HasOne("Fit.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Fit.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");

                    b.HasOne("Fit.Models.Rank", "Rank")
                        .WithMany()
                        .HasForeignKey("RankId");

                    b.HasOne("Fit.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");
                });
#pragma warning restore 612, 618
        }
    }
}
